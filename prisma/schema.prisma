generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id          String   @id @default(cuid())
  name        String
  code        String   @unique
  type        String
  description String?
  address     String?
  city        String?
  phone       String?
  email       String?
  website     String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]

  @@map("organizations")
}

model User {
  id                    String        @id @default(cuid())
  email                 String        @unique
  phone                 String?
  firstName             String
  lastName              String
  roleId                String?
  role                  Role?         @relation(fields: [roleId], references: [id])
  isActive              Boolean       @default(true)
  isVerified            Boolean       @default(false)
  jobTitle              String?
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  lastLoginAt           DateTime?
  primaryOrganizationId String?
  primaryOrganization   Organization? @relation(fields: [primaryOrganizationId], references: [id])

  @@map("users")
}

model Role {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  users       User[]
  permissions RolesOnPermissions[]

  @@map("roles")
}

model Permission {
  id    String @id @default(cuid())
  name  String @unique // e.g., 'create:user', 'read:report'
  roles RolesOnPermissions[]

  @@map("permissions")
}

model RolesOnPermissions {
  role       Role       @relation(fields: [roleId], references: [id])
  roleId     String
  permission Permission @relation(fields: [permissionId], references: [id])
  permissionId String

  @@id([roleId, permissionId])
  @@map("roles_on_permissions")
}
