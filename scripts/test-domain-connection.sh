#!/bin/bash

# üß™ Test de Connexion Domaine - administration.ga

echo "üß™ TEST DE CONNEXION DOMAINE ADMINISTRATION.GA"
echo "=============================================="
echo ""

# Couleurs pour l'affichage
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

DOMAIN="administration.ga"
IP_LOCAL="185.26.106.234"

echo -e "${BLUE}üîç TESTS DE VALIDATION${NC}"
echo "======================="
echo ""

# Test 1: V√©rification IP publique
echo -e "${YELLOW}üìç Test 1: V√©rification IP publique${NC}"
CURRENT_IP=$(curl -4 -s ifconfig.me)
echo "IP actuelle d√©tect√©e: $CURRENT_IP"
if [ "$CURRENT_IP" = "$IP_LOCAL" ]; then
    echo -e "${GREEN}‚úÖ IP correspond √† la configuration${NC}"
else
    echo -e "${RED}‚ö†Ô∏è  IP diff√©rente de la configuration ($IP_LOCAL)${NC}"
    echo "   Vous devrez peut-√™tre mettre √† jour l'IP dans l'interface"
fi
echo ""

# Test 2: V√©rification application locale
echo -e "${YELLOW}üì± Test 2: Application locale${NC}"
if curl -s -f http://localhost:3000 >/dev/null; then
    echo -e "${GREEN}‚úÖ Application fonctionne sur localhost:3000${NC}"
else
    echo -e "${RED}‚ùå Application non accessible sur localhost:3000${NC}"
    echo "   D√©marrez l'application avec: npm run dev"
fi
echo ""

# Test 3: Test API domaine management
echo -e "${YELLOW}üîß Test 3: API Domain Management${NC}"
API_RESPONSE=$(curl -s "http://localhost:3000/api/domain-management/dns?domain=$DOMAIN")
if echo "$API_RESPONSE" | grep -q "success"; then
    echo -e "${GREEN}‚úÖ API Domain Management fonctionne${NC}"
    echo "   Configuration DNS Netim d√©tect√©e"
else
    echo -e "${RED}‚ùå Probl√®me avec l'API Domain Management${NC}"
fi
echo ""

# Test 4: R√©solution DNS (si configur√©)
echo -e "${YELLOW}üåê Test 4: R√©solution DNS${NC}"
DNS_RESULT=$(nslookup $DOMAIN 2>/dev/null | grep "Address:" | tail -1 | awk '{print $2}')
if [ ! -z "$DNS_RESULT" ]; then
    echo "DNS r√©solu vers: $DNS_RESULT"
    if [ "$DNS_RESULT" = "$IP_LOCAL" ]; then
        echo -e "${GREEN}‚úÖ DNS pointe vers votre IP${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  DNS pointe vers une IP diff√©rente${NC}"
        echo "   V√©rifiez la configuration chez Netim.com"
    fi
else
    echo -e "${YELLOW}‚è≥ DNS pas encore propag√© ou non configur√©${NC}"
    echo "   Configurez les enregistrements A chez Netim:"
    echo "   A @ ‚Üí $IP_LOCAL"
    echo "   A www ‚Üí $IP_LOCAL"
fi
echo ""

# Test 5: Accessibilit√© externe (si DNS configur√©)
echo -e "${YELLOW}üåç Test 5: Accessibilit√© externe${NC}"
if [ ! -z "$DNS_RESULT" ] && [ "$DNS_RESULT" = "$IP_LOCAL" ]; then
    echo "Test d'acc√®s externe..."
    if curl -s -f --connect-timeout 10 "http://$DOMAIN:3000" >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Domaine accessible depuis l'ext√©rieur${NC}"
        echo "   üéâ http://$DOMAIN:3000 fonctionne !"
    else
        echo -e "${RED}‚ùå Domaine non accessible depuis l'ext√©rieur${NC}"
        echo "   V√©rifiez:"
        echo "   ‚Ä¢ Ports 80/3000 ouverts sur votre machine"
        echo "   ‚Ä¢ Redirection de ports sur votre routeur"
        echo "   ‚Ä¢ Pare-feu autorise les connexions entrantes"
    fi
else
    echo -e "${YELLOW}‚è≠Ô∏è  Ignor√© (DNS non configur√©)${NC}"
fi
echo ""

# Recommandations
echo -e "${BLUE}üìã ACTIONS RECOMMAND√âES${NC}"
echo "======================="
echo ""

echo "üîß Configuration Netim.com:"
echo "  1. Connectez-vous √† netim.com"
echo "  2. Mes domaines ‚Üí $DOMAIN ‚Üí DNS"
echo "  3. Ajoutez:"
echo "     Type: A, Nom: @, Valeur: $IP_LOCAL"
echo "     Type: A, Nom: www, Valeur: $IP_LOCAL"
echo ""

echo "‚öôÔ∏è Configuration Application:"
echo "  1. Ouvrez: http://localhost:3000/admin-web/config/administration.ga"
echo "  2. Onglet 'Domaines'"
echo "  3. IP: $IP_LOCAL (pr√©-remplie)"
echo "  4. Cliquez 'D√©marrer la Configuration'"
echo ""

echo "üîì Configuration R√©seau (si n√©cessaire):"
echo "  ‚Ä¢ Ouvrir ports 80 et 443 sur votre machine"
echo "  ‚Ä¢ Configurer redirection de ports sur routeur"
echo "  ‚Ä¢ Ou utiliser un tunnel: ngrok http 3000"
echo ""

echo "üß™ Tests finaux:"
echo "  ‚Ä¢ Attendre propagation DNS (15min-2h)"
echo "  ‚Ä¢ Tester: http://$DOMAIN:3000"
echo "  ‚Ä¢ Relancer ce script pour validation"
echo ""

echo -e "${GREEN}üéØ Une fois configur√©, votre domaine $DOMAIN sera accessible mondialement !${NC}"
