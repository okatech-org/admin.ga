#!/bin/bash

# ================================================
# Script d'Aide - Configuration Secrets GitHub
# G√©n√®re les valeurs pour les secrets GitHub Actions
# ================================================

set -euo pipefail

# Couleurs pour les logs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# ===============================================
# Fonctions utilitaires
# ===============================================
log() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

success() {
    echo -e "${GREEN}[‚úì]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[‚ö†]${NC} $1"
}

error() {
    echo -e "${RED}[‚úó]${NC} $1"
}

header() {
    echo -e "\n${CYAN}================================================${NC}"
    echo -e "${CYAN}$1${NC}"
    echo -e "${CYAN}================================================${NC}\n"
}

# ===============================================
# G√©n√©ration des secrets
# ===============================================
generate_secrets() {
    header "üîë G√©n√©ration des Secrets GitHub Actions"

    echo "Ce script g√©n√®re les valeurs pour vos secrets GitHub."
    echo "Vous devrez les copier manuellement dans GitHub > Settings > Secrets."
    echo ""

    # 1. NEXTAUTH_SECRET
    log "G√©n√©ration de NEXTAUTH_SECRET..."
    NEXTAUTH_SECRET=$(openssl rand -base64 32)
    echo ""
    echo "‚úÖ NEXTAUTH_SECRET:"
    echo "   Nom: NEXTAUTH_SECRET"
    echo "   Valeur: $NEXTAUTH_SECRET"
    echo ""

    # 2. DATABASE_URL
    echo "‚úÖ DATABASE_URL:"
    echo "   Nom: DATABASE_URL"
    echo "   Valeur Local: postgresql://postgres:password@localhost:5432/administration_ga"
    echo "   Valeur Prod: postgresql://username:password@host:5432/administration_ga"
    echo ""

    # 3. NEXTAUTH_URL
    echo "‚úÖ NEXTAUTH_URL:"
    echo "   Nom: NEXTAUTH_URL"
    echo "   Valeur Dev: http://localhost:3000"
    echo "   Valeur Prod: https://administration.ga"
    echo ""

    # 4. Cl√© SSH pour d√©ploiement (optionnel)
    warning "Pour le d√©ploiement automatique (optionnel):"
    echo "   G√©n√©rer une cl√© SSH: ssh-keygen -t ed25519 -C 'deploy@administration.ga'"
    echo "   PRODUCTION_SSH_KEY: [contenu de la cl√© priv√©e]"
    echo ""

    # 5. R√©sum√©
    header "üìã R√©sum√© - Secrets √† Configurer dans GitHub"
    echo "Allez sur: https://github.com/[votre-username]/ADMINISTRATION.GA/settings/secrets/actions"
    echo ""
    echo "Secrets OBLIGATOIRES (√©liminent les warnings) :"
    echo "1. DATABASE_URL = postgresql://postgres:password@localhost:5432/administration_ga"
    echo "2. NEXTAUTH_SECRET = $NEXTAUTH_SECRET"
    echo "3. NEXTAUTH_URL = https://administration.ga"
    echo ""
    echo "Secrets OPTIONNELS (pour d√©ploiement plus tard) :"
    echo "4. PRODUCTION_HOST = administration.ga"
    echo "5. PRODUCTION_USER = deploy"
    echo "6. PRODUCTION_SSH_KEY = [cl√© SSH priv√©e]"
    echo "7. SLACK_WEBHOOK_URL = [webhook Slack pour notifications]"
    echo ""
}

# ===============================================
# V√©rification des outils
# ===============================================
check_tools() {
    log "V√©rification des outils disponibles..."

    if command -v openssl &> /dev/null; then
        success "OpenSSL disponible"
    else
        error "OpenSSL non trouv√© - installez-le pour g√©n√©rer des secrets forts"
        exit 1
    fi

    if command -v ssh-keygen &> /dev/null; then
        success "SSH-keygen disponible"
    else
        warning "SSH-keygen non trouv√© - d√©ploiement automatique non disponible"
    fi
}

# ===============================================
# Guide d'utilisation
# ===============================================
show_usage() {
    echo "Usage: $0 [OPTIONS]"
    echo ""
    echo "Options:"
    echo "  generate, -g     G√©n√©rer les valeurs des secrets"
    echo "  guide, -guide    Afficher le guide de configuration"
    echo "  help, -h         Afficher cette aide"
    echo ""
    echo "Exemples:"
    echo "  $0 generate      # G√©n√©rer tous les secrets"
    echo "  $0 guide         # Guide de configuration GitHub"
}

# ===============================================
# Guide de configuration GitHub
# ===============================================
show_github_guide() {
    header "üìñ Guide Configuration GitHub Secrets"

    echo "1. üåê Aller sur GitHub :"
    echo "   https://github.com/[votre-username]/ADMINISTRATION.GA"
    echo ""

    echo "2. ‚öôÔ∏è Acc√©der aux Secrets :"
    echo "   Settings ‚Üí Secrets and variables ‚Üí Actions"
    echo ""

    echo "3. ‚ûï Ajouter un Secret :"
    echo "   - Cliquer 'New repository secret'"
    echo "   - Entrer le NOM du secret"
    echo "   - Entrer la VALEUR du secret"
    echo "   - Cliquer 'Add secret'"
    echo ""

    echo "4. üîÅ R√©p√©ter pour chaque secret :"
    echo "   Configurez au minimum ces 3 secrets :"
    echo "   - DATABASE_URL"
    echo "   - NEXTAUTH_SECRET"
    echo "   - NEXTAUTH_URL"
    echo ""

    echo "5. ‚úÖ V√©rification :"
    echo "   - Les warnings GitHub dispara√Ætront"
    echo "   - Le build CI/CD passera au vert"
    echo "   - L'application fonctionnera correctement"
    echo ""

    success "Une fois configur√©, votre CI/CD fonctionnera parfaitement ! üöÄ"
}

# ===============================================
# Test de connectivit√© GitHub (optionnel)
# ===============================================
test_github_connection() {
    log "Test de connectivit√© GitHub..."

    if command -v gh &> /dev/null; then
        if gh auth status &> /dev/null; then
            success "GitHub CLI configur√© et authentifi√©"
            warning "Vous pourriez configurer les secrets via CLI:"
            echo "   gh secret set DATABASE_URL --body 'postgresql://...'"
            echo "   gh secret set NEXTAUTH_SECRET --body '$NEXTAUTH_SECRET'"
        else
            warning "GitHub CLI install√© mais non authentifi√©"
            echo "   Authentifiez-vous avec: gh auth login"
        fi
    else
        log "GitHub CLI non install√© - configuration manuelle requise"
    fi
}

# ===============================================
# Fonction principale
# ===============================================
main() {
    case "${1:-help}" in
        "generate"|"-g")
            check_tools
            generate_secrets
            test_github_connection
            ;;
        "guide"|"-guide")
            show_github_guide
            ;;
        "help"|"-h"|*)
            show_usage
            ;;
    esac
}

# Ex√©cuter la fonction principale
main "$@"
